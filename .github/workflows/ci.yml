name: CI

on:
  push:
    branches: ['**']
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Playwright E2E tests
        run: npm run e2e

      - name: Lighthouse CI
        run: npm run lighthouse

      - name: Comment Lighthouse scores
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const dir = '.lighthouseci';
            if (!fs.existsSync(dir)) {
              core.warning('No Lighthouse results found.');
              return;
            }
            const files = fs.readdirSync(dir).filter((file) => file.endsWith('.json'));
            if (!files.length) {
              core.warning('No Lighthouse JSON reports found.');
              return;
            }
            const report = JSON.parse(fs.readFileSync(path.join(dir, files[0]), 'utf8'));
            const categories = report.categories ?? {};
            const score = (id) => Math.round(((categories[id]?.score ?? 0) * 100));
            const body = [
              '## Lighthouse (mobile)',
              '',
              '| Category | Score |',
              '| --- | --- |',
              `| Performance | ${score('performance')} |`,
              `| Accessibility | ${score('accessibility')} |`,
              `| Best Practices | ${score('best-practices')} |`,
              `| SEO | ${score('seo')} |`,
            ].join('\n');
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body,
            });
